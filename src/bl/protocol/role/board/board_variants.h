
#ifndef SRC_ROLE_BOARD_BOARD_H_
#define SRC_ROLE_BOARD_BOARD_H_

#if defined(__cplusplus)
extern "C" {
#endif


typedef enum
{
    BOARD_PORTA,
    BOARD_PORTB,
    BOARD_PORTC,
    BOARD_PORTD,
    BOARD_PORTE
} enum_BOARD_PORT_OFFSET;


#if (BOARD_CAN_BAUDRATE_DEFAULT == 1000)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_1MBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 800)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_800KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 500)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_500KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 250)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_250KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 125)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_125KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 100)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_100KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 83)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_83KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 50)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_50KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 33)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_33KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 20)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_20KBIT

#elif (BOARD_CAN_BAUDRATE_DEFAULT == 10)
#define BOARD_CAN_DEFAULT_BAUDRATE  E_BAUD_10KBIT

#else
#error "BOARD_CAN_BAUDRATE_DEFAULT is undefined. Please correct the CAN_BAUDRATE_KBITS_DEFAULT parameter in the respective variant configuration in bt.variants. file."
#endif 


#define BOARD_CAN_INVALID_REC   ((uint8_t)0xFF)

#define IS_CAN_INSTANCE_VALID(instance) ((uint8_t)(CAN_INSTANCES & (0x1 << instance)) ? ((uint8_t)instance) : BOARD_CAN_INVALID_REC)

_Static_assert( (BOARD_CAN_INVALID_REC != IS_CAN_INSTANCE_VALID(BOARD_CAN_BUS_DEFAULT)), "The default CAN instance CAN_INTERFACE_DEFAULT is invalid for the given variant (check bt.variants file).");


#if defined(CPU_S32K148)
#define BOARD_CAN_FD_ENS            {true, true, true}
#define BOARD_CAN_CAN_CLK           {PCC_FlexCAN0_INDEX, PCC_FlexCAN1_INDEX, PCC_FlexCAN2_INDEX}
#define BOARD_SPI_CLK               {PCC_LPSPI0_INDEX, PCC_LPSPI1_INDEX, PCC_LPSPI2_INDEX}

#elif defined(CPU_S32K146)
#define BOARD_CAN_FD_ENS            {true, true, false}
#define BOARD_CAN_CAN_CLK           {PCC_FlexCAN0_INDEX, PCC_FlexCAN1_INDEX, PCC_FlexCAN2_INDEX}

#elif (defined(CPU_S32K144HFT0VLLT) || defined(CPU_S32K144LFT0MLLT))
#define BOARD_CAN_FD_ENS            {true, false, false}
#define BOARD_CAN_CAN_CLK           {PCC_FlexCAN0_INDEX, PCC_FlexCAN1_INDEX, PCC_FlexCAN2_INDEX}
#define BOARD_SPI_CLK               {PCC_LPSPI0_INDEX, PCC_LPSPI1_INDEX, PCC_LPSPI2_INDEX}
#define BOARD_SCI_CLK               {PCC_LPUART0_INDEX, PCC_LPUART1_INDEX, PCC_LPUART2_INDEX}
#define BOARD_SCI_IRQ               {LPUART0_RxTx_IRQn, LPUART1_RxTx_IRQn, LPUART2_RxTx_IRQn}

#elif defined(CPU_S32K142)
#define BOARD_CAN_FD_ENS            {true, false, false}
#define BOARD_CAN_CAN_CLK           {PCC_FlexCAN0_INDEX, PCC_FlexCAN1_INDEX, BOARD_CAN_INVALID_REC}

#elif defined(CPU_S32K118)
#define BOARD_CAN_FD_ENS            {true, false, false}
#define BOARD_CAN_CAN_CLK           {PCC_FlexCAN0_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#elif defined(CPU_S32K116)
#define BOARD_CAN_FD_ENS            {true, false, false}
#define BOARD_CAN_CAN_CLK           {PCC_FlexCAN0_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#elif defined(CPU_MK10DN512VLL10)
#define BOARD_CAN_FD_ENS            {false}
#define BOARD_CAN_CAN_CLK           {kCLOCK_Flexcan0}

#else
#error "MCU type unknown"
#endif

#if (defined(CPU_S32K148) || defined(CPU_S32K146) || defined(CPU_S32K144HFT0VLLT) || defined(CPU_S32K144LFT0MLLT) || defined(CPU_S32K142))

#define BOARD_CAN_CLK_SRCS          {FLEXCAN_CLK_SOURCE_PERIPH, FLEXCAN_CLK_SOURCE_PERIPH, FLEXCAN_CLK_SOURCE_PERIPH}

#elif defined(CPU_MK10DN512VLL10)

#define BOARD_CAN_CLK_SRCS          {kFLEXCAN_ClkSrcPeri, kFLEXCAN_ClkSrcPeri}

#else
#error "MCU type unknown. Please add support of new MCU."
#endif 

#define BOARD_USE_INTERNAL_WDOG


#if (BOARD_PINOUT_CONFIG == 1)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA}
#define BOARD_CAN_EN_PINS           {11u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE}
#define BOARD_CAN_STB_PINS          {13u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTE
#define BOARD_DO_POWER_PIN          16u

#define BOARD_SPI_GPIO_CLK          {PCC_PORTB_INDEX, PCC_PORTE_INDEX, PCC_PORTD_INDEX}
#define BOARD_SPI_GPIO_MUX          {3u, 5u, 3u}
#define BOARD_SPI_PORTS             {PORTB, PORTE, PORTD}
#define BOARD_SPI_PINS              {14u, 0u, 1u}

#define BOARD_SPI_CS_GPIO_CLK       {PCC_PORTA_INDEX, PCC_PORTA_INDEX, PCC_PORTB_INDEX, PCC_PORTE_INDEX}
#define BOARD_SPI_CS_GPIO_MUX       {3u, 3u, 3u, 5u}
#define BOARD_SPI_CS_PORTS          {PORTA, PORTA, PORTB, PORTE}
#define BOARD_SPI_CS_PINS           {6u, 16u, 17u, 1u}

#define BOARD_SPI_HOLD_PORT			BOARD_PORTB
#define BOARD_SPI_HOLD_PIN			13
#define BOARD_SPI_WP_PORT			BOARD_PORTB
#define BOARD_SPI_WP_PIN			9

#elif (BOARD_PINOUT_CONFIG == 2)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, PCC_PORTA_INDEX, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, 3u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, PORTA, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, PORTA, NULL}

#define BOARD_CAN_RX_PINS           {4u, 12u, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, 13u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA, BOARD_PORTE}
#define BOARD_CAN_EN_PINS           {11u, 12u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE, BOARD_PORTE}
#define BOARD_CAN_STB_PINS          {1u, 3u}

#define BOARD_EXT_WDOG_PORT         BOARD_PORTE
#define BOARD_EXT_WDOG_PIN          11u

#define BOARD_DO_POWER_PORT         BOARD_PORTD
#define BOARD_DO_POWER_PIN          15u

#elif (BOARD_PINOUT_CONFIG == 3)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTE}
#define BOARD_CAN_EN_PINS           {11u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTE
#define BOARD_DO_POWER_PIN          16u

#elif (BOARD_PINOUT_CONFIG == 4)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA}
#define BOARD_CAN_EN_PINS           {11u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE}
#define BOARD_CAN_STB_PINS          {1u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTE
#define BOARD_DO_POWER_PIN          16u

#elif (BOARD_PINOUT_CONFIG == 5)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTB_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTB, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTB, NULL, NULL}

#define BOARD_CAN_RX_PINS           {0u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {1u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTD}
#define BOARD_CAN_EN_PINS           {0u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTD}
#define BOARD_CAN_STB_PINS          {14u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTA
#define BOARD_DO_POWER_PIN          15u

#elif (BOARD_PINOUT_CONFIG == 6)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTB_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTB, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTB, NULL, NULL}

#define BOARD_CAN_RX_PINS           {0u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {1u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTC}
#define BOARD_CAN_EN_PINS           {10u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTC}
#define BOARD_CAN_STB_PINS          {11u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTA
#define BOARD_DO_POWER_PIN          13u

#elif (BOARD_PINOUT_CONFIG == 7)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, PCC_PORTC_INDEX, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, 3u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, PORTC, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, PORTC, NULL}

#define BOARD_CAN_RX_PINS           {4u, 6u, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, 7u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA, BOARD_PORTE}
#define BOARD_CAN_EN_PINS           {11u, 12u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE, BOARD_PORTE}
#define BOARD_CAN_STB_PINS          {1u, 3u}

#define BOARD_EXT_WDOG_PORT         BOARD_PORTE
#define BOARD_EXT_WDOG_PIN          11u

#define BOARD_DO_POWER_PORT         BOARD_PORTD
#define BOARD_DO_POWER_PIN          15u

#elif (BOARD_PINOUT_CONFIG == 8)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, PCC_PORTA_INDEX, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, 3u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, PORTA, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, PORTA, NULL}

#define BOARD_CAN_RX_PINS           {4u, 12u, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, 13u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA, BOARD_PORTD}
#define BOARD_CAN_EN_PINS           {11u, 4u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE, BOARD_PORTB}
#define BOARD_CAN_STB_PINS          {1u, 10u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTD
#define BOARD_DO_POWER_PIN          15u

#elif (BOARD_PINOUT_CONFIG == 9)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#elif (BOARD_PINOUT_CONFIG == 10)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, PCC_PORTC_INDEX, PCC_PORTB_INDEX}
#define BOARD_CAN_GPIO_MUX          {5u, 3u, 4u}

#define BOARD_CAN_RX_PORTS          {PORTE, PORTC, PORTB}
#define BOARD_CAN_TX_PORTS          {PORTE, PORTC, PORTB}

#define BOARD_CAN_RX_PINS           {4u, 6u, 12u}
#define BOARD_CAN_TX_PINS           {5u, 7u, 13u}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA, BOARD_PORTE, BOARD_PORTE}
#define BOARD_CAN_EN_PINS           {11u, 12u, 7u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE, BOARD_PORTE, BOARD_PORTE}
#define BOARD_CAN_STB_PINS          {1u, 3u, 9u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTD
#define BOARD_DO_POWER_PIN          15u

#elif (BOARD_PINOUT_CONFIG == 11)
#define BOARD_CAN_GPIO_CLK          {kCLOCK_PortA, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {kPORT_MuxAlt2, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTA, NULL}
#define BOARD_CAN_TX_PORTS          {PORTA, NULL}

#define BOARD_CAN_RX_PINS           {13u, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {12u, BOARD_CAN_INVALID_REC}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#elif (BOARD_PINOUT_CONFIG == 12)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_SPI_GPIO_CLK          {PCC_PORTB_INDEX, PCC_PORTB_INDEX, PCC_PORTB_INDEX}
#define BOARD_SPI_GPIO_MUX          {3u, 3u, 3u}
#define BOARD_SPI_PORTS             {PORTB, PORTB, PORTB}
#define BOARD_SPI_PINS              {2u, 1u, 3u}

#define BOARD_SPI_CS_GPIO_CLK       {PCC_PORTB_INDEX}
#define BOARD_SPI_CS_GPIO_MUX       {3u}
#define BOARD_SPI_CS_PORTS          {PORTB}
#define BOARD_SPI_CS_PINS           {0u}

#define BOARD_SPI_WP_PORT			BOARD_PORTA
#define BOARD_SPI_WP_PIN			17

#elif (BOARD_PINOUT_CONFIG == 13)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTE}
#define BOARD_CAN_EN_PINS           {8u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTD}
#define BOARD_CAN_STB_PINS          {16u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTB
#define BOARD_DO_POWER_PIN          1u

#elif (BOARD_PINOUT_CONFIG == 14)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, PCC_PORTA_INDEX, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, 3u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, PORTA, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, PORTA, NULL}

#define BOARD_CAN_RX_PINS           {4u, 12u, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, 13u, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_EN_PORTS          {BOARD_PORTA, BOARD_PORTE}
#define BOARD_CAN_EN_PINS           {11u, 12u}
#define BOARD_CAN_STB_PORTS         {BOARD_PORTE, BOARD_PORTE}
#define BOARD_CAN_STB_PINS          {1u, 3u}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_DO_POWER_PORT         BOARD_PORTD
#define BOARD_DO_POWER_PIN          15u

#elif (BOARD_PINOUT_CONFIG == 15)
#define BOARD_CAN_GPIO_CLK          {PCC_PORTE_INDEX, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_GPIO_MUX          {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#define BOARD_CAN_RX_PORTS          {PORTE, NULL, NULL}
#define BOARD_CAN_TX_PORTS          {PORTE, NULL, NULL}

#define BOARD_CAN_RX_PINS           {4u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}
#define BOARD_CAN_TX_PINS           {5u, BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC}

#ifdef BOARD_USE_EXTERNAL_WDOG
#undef BOARD_USE_EXTERNAL_WDOG
#endif 

#define BOARD_SCI_GPIO_CLK          {BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC, PCC_PORTA_INDEX}
#define BOARD_SCI_GPIO_MUX          {BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC, 2u}

#define BOARD_SCI_PORTS             {NULL, NULL, PORTA}
#define BOARD_SCI_RX_PINS           {BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC, 8u}
#define BOARD_SCI_TX_PINS           {BOARD_CAN_INVALID_REC, BOARD_CAN_INVALID_REC, 9u}

#endif 


#ifdef __cplusplus
}
#endif

#endif 


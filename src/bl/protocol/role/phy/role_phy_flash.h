
#ifndef SRC_ROLE_PHY_FLASH_H_
#define SRC_ROLE_PHY_FLASH_H_

#if defined(__cplusplus)
extern "C" {
#endif


#define ROLE_DO_PARAM_LIST_FLASH \
        , ROLE_MAP_REAL_PARAM_TO_NUM(struct_ROLE_EEPROM_RDD*, ROLE_FLASH_PARAM_EEPROM_RDD) \
        , ROLE_MAP_REAL_PARAM_TO_NUM(struct_ROLE_EEPROM_WRD*, ROLE_FLASH_PARAM_EEPROM_WRD) \
        , ROLE_MAP_REAL_PARAM_TO_NUM(struct_ROLE_FLASH_ERASE*, ROLE_FLASH_PARAM_FLASH_ERASE) \
        , ROLE_MAP_REAL_PARAM_TO_NUM(struct_ROLE_FLASH_WR_VFD*, ROLE_FLASH_PARAM_FLASH_WR_VFD) \
        , ROLE_MAP_REAL_PARAM_TO_NUM(struct_ROLE_PROGRAM_ONCE_BLOCK*, ROLE_FLASH_PARAM_PROGRAM_ONCE_BLOCK) \
        , ROLE_MAP_REAL_PARAM_TO_NUM(fptr_EEPROM_READ_CALLBACK, ROLE_FLASH_PARAM_EEPROM_READ_CALLBACK) \
        , ROLE_MAP_REAL_PARAM_TO_NUM(fptr_EEPROM_WRITE_CALLBACK, ROLE_FLASH_PARAM_EEPROM_WRITE_CALLBACK)




typedef enum
{
    ROLE_FLASH_PARAM_EEPROM_RDD = ROLE_COMPOSE_DO_PARAM_BASE(ROLE_TYPE_FLASH),
    ROLE_FLASH_PARAM_EEPROM_WRD,
    ROLE_FLASH_PARAM_FLASH_ERASE,
    ROLE_FLASH_PARAM_FLASH_WR_VFD,
    ROLE_FLASH_PARAM_PROGRAM_ONCE_BLOCK,

	ROLE_FLASH_PARAM_EEPROM_READ_CALLBACK,
	ROLE_FLASH_PARAM_EEPROM_WRITE_CALLBACK

} enum_ROLE_FLASH_DO_PARAM;

typedef enum
{
    ROLE_FLASH_EEPROM_READ = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,    0u, ROLE_FLASH_PARAM_EEPROM_RDD),
    ROLE_FLASH_EEPROM_WRITE = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,   1u, ROLE_FLASH_PARAM_EEPROM_WRD),
    ROLE_FLASH_ERASE = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,          2u, ROLE_FLASH_PARAM_FLASH_ERASE),
    ROLE_FLASH_WRITE = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,          3u, ROLE_FLASH_PARAM_FLASH_WR_VFD),
    ROLE_FLASH_VERIFY = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,         4u, ROLE_FLASH_PARAM_FLASH_WR_VFD),
    ROLE_FLASH_EEPROM_REFORMAT = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,         5u, ROLE_ANY_PARAM_UINT32),
#if 0
	ROLE_FLASH_PROGRAM_ONCE_READ = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,    6u, ROLE_FLASH_PARAM_PROGRAM_ONCE_BLOCK),
    ROLE_FLASH_PROGRAM_ONCE_WRITE = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,   7u, ROLE_FLASH_PARAM_PROGRAM_ONCE_BLOCK)
#endif 

#if defined(ROLE_MINIMAL) 

    ROLE_FLASH_SET_EEPROM_CALLBACK_START_ADDRESS = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,   8u, ROLE_ANY_PARAM_UINT32),
    ROLE_FLASH_REGISTER_EEPROM_READ_CALLBACK = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,   9u, ROLE_FLASH_PARAM_EEPROM_READ_CALLBACK),
    ROLE_FLASH_REGISTER_EEPROM_WRITE_CALLBACK = ROLE_COMPOSE_DO_ID(ROLE_TYPE_FLASH,   10u, ROLE_FLASH_PARAM_EEPROM_WRITE_CALLBACK),

#endif 

} enum_ROLE_FLASH_DO_ID;

#define USE_INTERNAL_EEPROM (1)                         
#define USE_EXTERNAL_EEPROM (0)                         

#define FLASH_TARGET                                    

typedef struct
{
  uint32_t address;
  uint8_t *ptr_to_val;
} struct_ROLE_EEPROM_RDD;

typedef struct
{
  uint32_t address;
  uint16_t size;
  uint8_t const *ptr_val;
} struct_ROLE_EEPROM_WRD;

typedef struct
{
  uint32_t address;
  uint32_t size;
} struct_ROLE_FLASH_ERASE;

typedef struct
{
  uint32_t address;
  uint16_t size;
  uint8_t const *ptr_val;
} struct_ROLE_FLASH_WR_VFD;

typedef struct
{
  uint8_t index;
  uint8_t *ptr_to_val;
} struct_ROLE_PROGRAM_ONCE_BLOCK;

typedef bool (*fptr_EEPROM_READ_CALLBACK)(uint32_t address, uint8_t **pointer);
typedef bool (*fptr_EEPROM_WRITE_CALLBACK)(uint32_t address, const uint8_t *data, size_t size);



void role_phy_flash_constructor(role_id_t id, pf_role_constructor parent);


#ifdef __cplusplus
}
#endif

#endif 

